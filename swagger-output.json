{
  "swagger": "2.0",
  "info": {
    "title": "Final Project",
    "description": "Final Project",
    "version": "1.0.0"
  },
  "host": "cse341-final-project-y4t8.onrender.com",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "definitions": {
    "Movies": {
      "type": "object",
      "required": ["title", "releaseDate", "genre", "director", "language", "synopsis", "duration"],
      "properties": {
        "title": {
          "type": "string",
          "example": "Friday the 13th"
        },
        "releaseDate": {
          "type": "string",
          "example": "1980-05-09"
        },
        "genre": {
          "type": "string",
          "example": "Horror"
        },
        "director": {
          "type": "string",
          "example": "Sean S. Cunningham"
        },
        "language": {
          "type": "string",
          "example": "English"
        },
        "synopsis": {
          "type": "string",
          "example": "A group of teenage camp counselors attempt to re-open an abandoned summer camp with a tragic past, but they are stalked by a mysterious, relentless killer."
        },
        "duration": {
          "type": "integer",
          "example": 185
        }
      }
    },
    "Actors": {
      "type": "object",
      "required": ["name", "birthDate", "nationality", "awards_count"],
      "properties": {
        "name": {
          "type": "string",
          "example": "John Candy"
        },
        "birthDate": {
          "type": "string",
          "example": "Smart Phone"
        },
        "Nationality": {
          "type": "string",
          "example": "123.00"
        },
        "awards_count": {
          "type": "integer",
          "example": 10
        }
      }
    },
    "Critics": {
      "type": "object",
      "required": ["name", "afiliation", "biography"],
      "properties": {
        "name": {
          "type": "string",
          "example": "Anton Ego"
        },
        "afiliation": {
          "type": "string",
          "example": "Self Published"
        },
        "biography": {
          "type": "string",
          "example": "Anton Ego is a renowned food critic, famously known for his discerning palate and scathing reviews"
        }
      }
    },
    "Reviews": {
      "type": "object",
      "required": ["movieName", "reviewDate", "reviewText", "rating"],
      "properties": {
        "name": {
          "type": "string",
          "example": "The Sandlot"
        },
        "reviewDate": {
          "type": "string",
          "example": "2024-09-09"
        },
        "reviewText": {
          "type": "string",
          "example": "What did I just watch?"
        },
        "rating": {
          "type": "integer",
          "example": 2
        }
      }
    } 
  },
  "paths": {
    "/movies/": {
      "get": {
        "tags": [
          "Movies"
        ],
        "description": "Retrieve all movies from the collection",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful retrieval of all movies",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "array"
                },
                "items": {
                  "$ref": "#/definitions/Movies"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Movies"
        ],
        "description": "Create a new movie",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Movie data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Movies"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Movie created successfully",
            "schema": {
              "$ref": "#/definitions/Movies"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/movies/{id}": {
      "get": {
        "tags": [
          "Movies"
        ],
        "description": "Retrieve a single movie by its ID",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Movie ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful retrieval of the movie",
            "schema": {
              "$ref": "#/definitions/Movies"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Movies"
        ],
        "description": "Update a movie by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Movie ID"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Movie data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Movies"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Movies"
        ],
        "description": "Delete a movie by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Movie ID"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/actors/": {
      "get": {
        "tags": [
          "Actors"
        ],
        "description": "Retrieve all actors from the collection",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful retrieval of all actors",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "array"
                },
                "items": {
                  "$ref": "#/definitions/Actors"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Actors"
        ],
        "description": "Create a new Actor",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Actor data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Actors"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Actor created successfully",
            "schema": {
              "$ref": "#/definitions/Actors"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/actors/{id}": {
      "get": {
        "tags": [
          "Actors"
        ],
        "description": "Retrieve a single actor by their ID",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Actor ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful retrieval of the actor",
            "schema": {
              "$ref": "#/definitions/Actors"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Actors"
        ],
        "description": "Update an existing actor by their ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Actor ID"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Actor data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Actors"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Actors"
        ],
        "description": "Delete an existing actor by their ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Actor ID"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/reviews/": {
      "get": {
        "tags": [
          "Reviews"
        ],
        "description": "Retrieve all reviews from the collection",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful retrieval of all reviews",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "array"
                },
                "items": {
                  "$ref": "#/definitions/Reviews"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Reviews"
        ],
        "description": "Create a new Review",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Review data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Reviews"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Review created successfully",
            "schema": {
              "$ref": "#/definitions/Reviews"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/reviews/{id}": {
      "get": {
        "tags": [
          "Reviews"
        ],
        "description": "Retrieve a single review by its ID",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Review ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful retrieval of the review",
            "schema": {
              "$ref": "#/definitions/Reviews"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Reviews"
        ],
        "description": "Update an existing review by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Review ID"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Review data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Reviews"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Reviews"
        ],
        "description": "Delete an existing review by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Review ID"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/critics/": {
      "get": {
        "tags": [
          "Critics"
        ],
        "description": "Retrieve all critics from the collection",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful retrieval of all critics",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "array"
                },
                "items": {
                  "$ref": "#/definitions/Critics"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Critics"
        ],
        "description": "Create a new Critic",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Critic data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Critics"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Critic created successfully",
            "schema": {
              "$ref": "#/definitions/Critics"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/critics/{id}": {
      "get": {
        "tags": [
          "Critics"
        ],
        "description": "Retrieve a single critic by their ID",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Critic ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful retrieval of the critic",
            "schema": {
              "$ref": "#/definitions/Critics"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Critics"
        ],
        "description": "Update an existing critic by their ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Critic ID"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Critic data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Critics"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Critics"
        ],
        "description": "Delete an existing critic by their ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Critic ID"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  }
}